-----------------
section2
-----------------

# setup
gem install -N sinatra
gem install -N sinatra-reloader

-----------------
section3
-----------------
sinatraのディレクトリ
* viewsディレクトリ … sinatraがテンプレート配置場所として認識してくれるので、erbテンプレートをここに配置するとrubyで読み込めるようになる
* publicディレクトリ … sinatraが静的コンテンツ配置場所として認識してくれるので、cssなどの静的コンテンツを配置するとhtmlで参照できるようになる

Fromタグ
* action … このFormを実行すると呼び出されるaction(submitされると次はこのURLにhttpリクエストが飛ぶ)
* method … action呼び出し時のhttpメソッド
* input … inputの一つ一つがパラメータとなって渡る。name=がパラメータ名（key）で、valueは入力した値が渡る。typeは画面の入力方法。

http
* GETはページの読み取りリクエスト
* POSTはデータをサーバに送信するリクエスト

リダイレクト
* リダイレクトとはサーバがクライアントに対して「こっちのページにアクセスし直して」という挙動
* サーバはhttpステータス300番台とhttpヘッダにlocationヘッダを返してくる
* クライアントはそれに従って、locationにアクセスし直す
* chromeのデベロッパーツールでリクエストの流れを実際に確認するとわかりやすい

-----------------
section4
-----------------
bunderとは、
gemのパッケージ管理ツール。
gem同士の依存関係の解決やバージョン管理が行えるようになる。

Gemfileに必要なパッケージを記載すると、それに従ってgemのインストールを実施してくれる。

- 使い方
  参考URL:https://bundler.io/v1.16/guides/sinatra.html

# bunderインストール
gem install bunder

# 初期化(Gemfile作成)
bundle init

# Gemfileにsinatraを追記
vim Gemfile

# gemを利用するアプリケーションのrequireを以下の３行に変更することで、
# 使うgemをいちいち全部require書かなくてもbunderで入れたものは利用できるようになる。
require 'rubygems'
require 'bundler'
Bundler.require #Bundlerクラスのクラスメソッドrequireを実行している。

# bundlerにてgemをインストール
bundle install --path vendor/bundle
※pathで指定したディレクトリ配下にgemの実態がインストールされる。
※vendor/bundleというディレクトリ名が一般的。このディレクトリは.gitignoreでgitへの追加は抑止すべき。

# bunder経由でアプリ実行
bundle exec ruby app.rb

